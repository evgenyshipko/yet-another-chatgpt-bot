import {getUser, userHasPaidSubscription} from "./utils/user";
import {Context, Telegraf} from "telegraf";
import {clearContext} from "./utils/gpt";
import * as fs from "fs";
import * as path from "path";
import {formatDate} from "./utils/utils";
export enum Commands {
    PROFILE= "üë§–ü—Ä–æ—Ñ–∏–ª—å",
    HELP = "‚ùî–ü–æ–º–æ—â—å",
    BUY = "üöÄ–ö—É–ø–∏—Ç—å –ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫—É",
    RESET_CONTEXT = "üßπ–°–±—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç",
}

export enum BotCommands {
    PROFILE= "/profile",
    HELP = "/help",
    BUY = "/buy",
    RESET_CONTEXT = "/reset_context",
}

export const helpHandler = (bot:Telegraf<Context>) => bot.hears([Commands.HELP, BotCommands.HELP], async (ctx) => {
    const text = fs.readFileSync(path.join(__dirname, './help.txt'), 'utf-8');
    ctx.reply(text)
})

export const buyHandler = (bot:Telegraf<Context>) => bot.hears([Commands.BUY, BotCommands.BUY], async (ctx) => {
    ctx.reply('–î–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –º–µ—Å—è—á–Ω–æ–π –ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∏ –ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞ @evgenyship\n' +
        '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∏ 500 —Ä—É–±–ª–µ–π/–º–µ—Å')
})

export const profileHandler = (bot:Telegraf<Context>) => bot.hears([Commands.PROFILE, BotCommands.PROFILE], async (ctx) => {
    const userId = ctx.update.message.from.id
    console.log('ctx.update.message.from', ctx.update.message.from)
    console.log('userId',userId)
    const userEntity = await getUser(userId)
    console.log('userEntity',userEntity)
    if (!userEntity){
        ctx.reply("–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –±–æ—Ç–æ–º –∏–ª–∏ –Ω–∞–∂–∞—Ç—å /start")
        return
    }

    const {tgId, nickname, freeLimit, subscriptionUntil} = userEntity;
    const hasPaidSubscription = userHasPaidSubscription(userEntity)

    const message = `ID: ${tgId}\n–Æ–∑–µ—Ä–Ω–µ–π–º: ${nickname}\n–ü–æ–¥–ø–∏—Å–∫–∞: ${hasPaidSubscription ? "–ø—Ä–µ–º–∏—É–º" : "–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è"}
    ${!hasPaidSubscription ? `\n–õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤: ${freeLimit} / 10` : `\n–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ :${formatDate(subscriptionUntil)}`}`
    ctx.reply(message, {parse_mode: 'Markdown'})
})

export const clearContextHandler = (bot:Telegraf<Context>) => bot.hears([Commands.RESET_CONTEXT, BotCommands.RESET_CONTEXT], async (ctx) => {
    const chatId = ctx.chat.id;
    clearContext(chatId)
    ctx.reply('–ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—á–∏—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
})